# GitHub Actions workflow for IT for Youth Ghana
# Automated testing, building, and deployment

name: Deploy IT for Youth Ghana

on:
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - main

jobs:
  # Test and Build
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run type checking
      run: npm run type-check
      
    - name: Run linting
      run: npm run lint
      
    - name: Run tests
      run: npm run test
      
    - name: Build application
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          npm run build:production
        elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
          npm run build:staging
        else
          npm run build
        fi
      env:
        VITE_APP_ENV: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
        VITE_APP_URL: ${{ github.ref == 'refs/heads/main' && 'https://itforyouthghana.org' || 'https://staging.itforyouthghana.org' }}
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-${{ github.sha }}
        path: dist/
        retention-days: 7

  # Deploy to Staging
  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'
    
    environment:
      name: staging
      url: https://staging.itforyouthghana.org
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist-${{ github.sha }}
        path: dist/
        
    - name: Deploy to staging server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.STAGING_HOST }}
        username: ${{ secrets.STAGING_USER }}
        key: ${{ secrets.STAGING_SSH_KEY }}
        script: |
          cd /var/www/staging.itforyouthghana.org
          git pull origin staging
          npm ci --production
          npm run build:staging
          sudo systemctl reload nginx
          
    - name: Run health check
      run: |
        sleep 10
        curl -f https://staging.itforyouthghana.org/health || exit 1

  # Deploy to Production
  deploy-production:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    environment:
      name: production
      url: https://itforyouthghana.org
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist-${{ github.sha }}
        path: dist/
        
    - name: Deploy to production server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.PRODUCTION_HOST }}
        username: ${{ secrets.PRODUCTION_USER }}
        key: ${{ secrets.PRODUCTION_SSH_KEY }}
        script: |
          cd /var/www/itforyouthghana.org
          
          # Backup current version
          sudo cp -r dist dist.backup.$(date +%Y%m%d_%H%M%S)
          
          # Deploy new version
          git pull origin main
          npm ci --production
          npm run build:production
          
          # Reload nginx
          sudo systemctl reload nginx
          
          # Clean old backups (keep last 5)
          sudo find . -name "dist.backup.*" -type d | sort | head -n -5 | xargs rm -rf
          
    - name: Run health check
      run: |
        sleep 10
        curl -f https://itforyouthghana.org/health || exit 1
        
    - name: Notify team
      if: success()
      uses: 8398a7/action-slack@v3
      with:
        status: success
        text: "✅ IT for Youth Ghana deployed successfully to production!"
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        
    - name: Notify on failure
      if: failure()
      uses: 8398a7/action-slack@v3
      with:
        status: failure
        text: "❌ IT for Youth Ghana deployment to production failed!"
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  # Lighthouse Performance Audit
  lighthouse:
    needs: [deploy-staging, deploy-production]
    runs-on: ubuntu-latest
    if: always() && (needs.deploy-staging.result == 'success' || needs.deploy-production.result == 'success')
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Run Lighthouse audit
      uses: treosh/lighthouse-ci-action@v10
      with:
        urls: |
          ${{ github.ref == 'refs/heads/main' && 'https://itforyouthghana.org' || 'https://staging.itforyouthghana.org' }}
          ${{ github.ref == 'refs/heads/main' && 'https://itforyouthghana.org/about' || 'https://staging.itforyouthghana.org/about' }}
          ${{ github.ref == 'refs/heads/main' && 'https://itforyouthghana.org/programs' || 'https://staging.itforyouthghana.org/programs' }}
        configPath: './lighthouse.config.js'
        uploadArtifacts: true
        temporaryPublicStorage: true