# Docker Compose configuration for IT for Youth Ghana
# Production deployment setup

version: '3.8'

services:
  # Main web application
  web:
    image: nginx:alpine
    container_name: itforyouthghana-web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../dist:/var/www/itforyouthghana.org:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/letsencrypt:ro
      - ./logs:/var/log/nginx
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - app-network

  # API service (if needed)
  api:
    image: node:20-alpine
    container_name: itforyouthghana-api
    working_dir: /app
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=production
      - PORT=8000
    volumes:
      - ../api:/app:ro
    command: ["node", "server.js"]
    restart: unless-stopped
    networks:
      - app-network

  # Database (if needed)
  database:
    image: postgres:15-alpine
    container_name: itforyouthghana-db
    environment:
      - POSTGRES_DB=itforyouthghana
      - POSTGRES_USER=${DB_USER:-admin}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-secure_password}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: unless-stopped
    networks:
      - app-network

  # Redis for caching (if needed)
  redis:
    image: redis:7-alpine
    container_name: itforyouthghana-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - app-network

volumes:
  db_data:
  redis_data:

networks:
  app-network:
    driver: bridge